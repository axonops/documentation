{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to AxonOps Documentation Introduction AxonOps is an extensible operational management tool initially built for Apache Cassandra (https://cassandra.apache.org). It is currently being extended to manage Apache Kafka (http://kafka.apache.org), Elasticsearch (https://www.elastic.co/products/elasticsearch), and others. Features Simple deployment model Dashboarding metrics, logs, and healthchecks Integrates with ChatOps tools - Slack, PagerDuty etc. Highly efficient metrics collection and storage Domain aware functionalities, including Cassandra repairs and backups. Components AxonOps has four main components: axon-server - The main server of axonops that collect metrics, logs, events and more. axon-agents - They corresponds to small binaries deployed onto the nodes of your clusters. axon-dash - The UI to interact with axon-server (dash for AxonOps Dashboards). Elasticsearch - A distributed search engine which stores all of the collected data.","title":"Introduction"},{"location":"#welcome-to-axonops-documentation","text":"","title":"Welcome to AxonOps Documentation"},{"location":"#introduction","text":"AxonOps is an extensible operational management tool initially built for Apache Cassandra (https://cassandra.apache.org). It is currently being extended to manage Apache Kafka (http://kafka.apache.org), Elasticsearch (https://www.elastic.co/products/elasticsearch), and others.","title":"Introduction"},{"location":"#features","text":"Simple deployment model Dashboarding metrics, logs, and healthchecks Integrates with ChatOps tools - Slack, PagerDuty etc. Highly efficient metrics collection and storage Domain aware functionalities, including Cassandra repairs and backups.","title":"Features"},{"location":"#components","text":"AxonOps has four main components: axon-server - The main server of axonops that collect metrics, logs, events and more. axon-agents - They corresponds to small binaries deployed onto the nodes of your clusters. axon-dash - The UI to interact with axon-server (dash for AxonOps Dashboards). Elasticsearch - A distributed search engine which stores all of the collected data.","title":"Components"},{"location":"cluster/cluster-overview/","text":"Cluster Overview is the home page and provides an overview of your cluster health, including OS , Cassandra and JVM . The information is automatically extracted by the AxonOps agent and it is pushed to AxonOps server. There is no need to configure anything on the agent or the server side for this information to be populated in the Cluster Overview dashboard. Viewing cluster overview On the Axonops application menu, select Cluster Overview . Infomy click on DC (data centre) to view the information for OS , Cassandra , JVM . a pop-up menu will appear with all the details. Infomy OS Details Operating System Details section shows general information including: General Information CPU Memory Swap Disk volumes Infomy Cassandra Details Cassandra Details view shows the details from cassandra.yaml loaded into Cassandra. There is a search field available near the top to filter the parameters. Infomy Infomy","title":"Overview"},{"location":"cluster/cluster-overview/#viewing-cluster-overview","text":"On the Axonops application menu, select Cluster Overview . Infomy click on DC (data centre) to view the information for OS , Cassandra , JVM . a pop-up menu will appear with all the details. Infomy","title":"Viewing cluster overview"},{"location":"cluster/cluster-overview/#os-details","text":"Operating System Details section shows general information including: General Information CPU Memory Swap Disk volumes Infomy","title":"OS Details"},{"location":"cluster/cluster-overview/#cassandra-details","text":"Cassandra Details view shows the details from cassandra.yaml loaded into Cassandra. There is a search field available near the top to filter the parameters. Infomy Infomy","title":"Cassandra Details"},{"location":"configuration/agent-configuration/","text":"Configuring AxonOps Agent Work in progress","title":"Configuring AxonOps Agent"},{"location":"configuration/agent-configuration/#configuring-axonops-agent","text":"Work in progress","title":"Configuring AxonOps Agent"},{"location":"configuration/axondash/","text":"Configuring AxonOps Agent Work in progress","title":"Configuring AxonOps Agent"},{"location":"configuration/axondash/#configuring-axonops-agent","text":"Work in progress","title":"Configuring AxonOps Agent"},{"location":"configuration/server-configuration/","text":"Configuring AxonOps Server Work in progress","title":"Configuring AxonOps Server"},{"location":"configuration/server-configuration/#configuring-axonops-server","text":"Work in progress","title":"Configuring AxonOps Server"},{"location":"how-to/backup-restore-notifications/","text":"Setup Backup - Restore Notications On the Axonops application menu, click Operations - Backups - Setup and select Notifications tab. Notification Severities. Notification Severities. For each notifications severity Info Warning Error you can either use the slider to use the default routing or use the icon to customize the notification integrations. Notice: not available when default routing selected Infomy Customize Notifications. To customize notifications click on select the integrations that you require and click Close . Infomy Noticed: The Warning Integration were customized. You can remove these by clicking the . If you want to remove default routing groups from a severity and create custom groups , use the slider bar to remove default routing click the and follow this steps If you do not require any notifications ensure the default routing is off and delete any previously created custom notification. Infomy","title":"Setup Backup-Restore Notifications"},{"location":"how-to/backup-restore-notifications/#setup-backup-restore-notications","text":"On the Axonops application menu, click Operations - Backups - Setup and select Notifications tab.","title":"Setup Backup - Restore Notications"},{"location":"how-to/backup-restore-notifications/#notification-severities","text":"Notification Severities. For each notifications severity Info Warning Error you can either use the slider to use the default routing or use the icon to customize the notification integrations. Notice: not available when default routing selected Infomy","title":"Notification Severities."},{"location":"how-to/backup-restore-notifications/#customize-notifications","text":"To customize notifications click on select the integrations that you require and click Close . Infomy Noticed: The Warning Integration were customized. You can remove these by clicking the . If you want to remove default routing groups from a severity and create custom groups , use the slider bar to remove default routing click the and follow this steps If you do not require any notifications ensure the default routing is off and delete any previously created custom notification. Infomy","title":"Customize Notifications."},{"location":"how-to/default-routing/","text":"Setup Default Routing Deafult Routing. Allows you to set up the channels though which alerts notifications will be received and the specific groups that will receive the alerts notifications Setup Default Routing On the Axonops application menu, select Alert Notifications - Integration and select Default Routing tab. Alert Notification types can be set up Infomy Info Warning Error Info To Setup Default Routing For Info click On Select the desired group(s) from the dropdown menu for the desired integrations(s) and click` to confirm selections Infomy The group should now appear in the Info Info box on the Default Routing Tab Infomy Warning - Error Repeat these steps to setup the Default Routing for Warning Error Edit Default Routing To Edit Default Routing click on the icon on either Add or Remove existing integrations using the dropdown menus. Delete Default Routing To Remove a group click on the Delete icon Infomy","title":"Setup Default Routing"},{"location":"how-to/default-routing/#setup-default-routing","text":"Deafult Routing. Allows you to set up the channels though which alerts notifications will be received and the specific groups that will receive the alerts notifications","title":"Setup Default Routing"},{"location":"how-to/default-routing/#setup-default-routing_1","text":"On the Axonops application menu, select Alert Notifications - Integration and select Default Routing tab. Alert Notification types can be set up Infomy Info Warning Error","title":"Setup Default Routing"},{"location":"how-to/default-routing/#info","text":"To Setup Default Routing For Info click On Select the desired group(s) from the dropdown menu for the desired integrations(s) and click` to confirm selections Infomy The group should now appear in the Info Info box on the Default Routing Tab Infomy","title":"Info"},{"location":"how-to/default-routing/#warning-error","text":"Repeat these steps to setup the Default Routing for Warning Error","title":"Warning - Error"},{"location":"how-to/default-routing/#edit-default-routing","text":"To Edit Default Routing click on the icon on either Add or Remove existing integrations using the dropdown menus.","title":"Edit Default Routing"},{"location":"how-to/default-routing/#delete-default-routing","text":"To Remove a group click on the Delete icon Infomy","title":"Delete Default Routing"},{"location":"how-to/setup-alert-rules/","text":"Setup alert rules Insert Alert Rules Credentials On the Axonops application menu, click Dashboards and select required Dashboard. eg. System Hover over the desired Chart click on the button. Infomy Complete The Fields In Form Below the chart click on the alert tab. Infomy A form will appear Infomy Complete Alert settings in Comparator Warning value or Critical value or Both and the Duration == (how often to check) In Infomy Annotations In the Summary box you can include free text type one or many of the following $labels $labels : - cluster - dc - hostname - org - rack - type - keyspace $value : In the Description box you can include free along with one or many of the above $labels Example CPU usage per DC Alerts usage on {{ $labels.hostname }} and cluster {{$labels.cluster}} Infomy Integrations Using the slider bar you can select any Integrations . Then click on the Info , Warning , Error icons, to select the group(s) of Integrations for the alert. Infomy Not selecting integrations If you do not select any specific Integrations the Alert will automatically follow the Global Dashboard Routing or if this has not been setup the Default Routing Integrations. Edit Alert Rule On the Axonops application menu, click Alerts Notifications and click Active. Select the Alert Rules tab and click Infomy Delete Alert Rule(s) To Delete An Alert Either... On the Axonops application menu, click Dashboards and select required Dashboard. eg. System Hover over the desired Chart click on the button. Below the chart click on the alert tab and click on the of the alert rule you want to remove. OR... On the Axonops application menu, click Alerts Notifications and click Active. Select the Alert Rules tab and click Infomy","title":"Setup Alert Rules"},{"location":"how-to/setup-alert-rules/#setup-alert-rules","text":"","title":"Setup alert rules"},{"location":"how-to/setup-alert-rules/#insert-alert-rules-credentials","text":"On the Axonops application menu, click Dashboards and select required Dashboard. eg. System Hover over the desired Chart click on the button. Infomy","title":"Insert Alert Rules Credentials"},{"location":"how-to/setup-alert-rules/#complete-the-fields-in-form","text":"Below the chart click on the alert tab. Infomy A form will appear Infomy Complete Alert settings in Comparator Warning value or Critical value or Both and the Duration == (how often to check) In Infomy","title":"Complete The Fields In Form"},{"location":"how-to/setup-alert-rules/#annotations","text":"In the Summary box you can include free text type one or many of the following $labels $labels : - cluster - dc - hostname - org - rack - type - keyspace $value : In the Description box you can include free along with one or many of the above $labels Example CPU usage per DC Alerts usage on {{ $labels.hostname }} and cluster {{$labels.cluster}} Infomy","title":"Annotations"},{"location":"how-to/setup-alert-rules/#integrations","text":"Using the slider bar you can select any Integrations . Then click on the Info , Warning , Error icons, to select the group(s) of Integrations for the alert. Infomy Not selecting integrations If you do not select any specific Integrations the Alert will automatically follow the Global Dashboard Routing or if this has not been setup the Default Routing Integrations.","title":"Integrations"},{"location":"how-to/setup-alert-rules/#edit-alert-rule","text":"On the Axonops application menu, click Alerts Notifications and click Active. Select the Alert Rules tab and click Infomy","title":"Edit Alert Rule"},{"location":"how-to/setup-alert-rules/#delete-alert-rules","text":"To Delete An Alert Either... On the Axonops application menu, click Dashboards and select required Dashboard. eg. System Hover over the desired Chart click on the button. Below the chart click on the alert tab and click on the of the alert rule you want to remove. OR... On the Axonops application menu, click Alerts Notifications and click Active. Select the Alert Rules tab and click Infomy","title":"Delete Alert Rule(s)"},{"location":"how-to/setup-dashboards-global-integrations/","text":"Setup Dashboards Global Integrations On the Axonops application menu, click Alerts Notifications - Active and select Dashboards Global Routing tab. Notification Severities. Notification Severities. For each notifications severity Info Warning Error you can either use the slider to use the default routing or use the icon to customize the notification integrations. Notice: not available when default routing selected Infomy Customize Notifications. To customize notifications click on select the integrations that you require and click Close . Infomy Noticed: The Warning Integration were customized. You can remove these by clicking the . If you want to remove default routing groups from a severity and create custom groups , use the slider bar to remove default routing click the and follow this steps If you do not require any notifications ensure the default routing is off and delete any previously created custom notification. Infomy","title":"Setup Dashboards-Global Integrations"},{"location":"how-to/setup-dashboards-global-integrations/#setup-dashboards-global-integrations","text":"On the Axonops application menu, click Alerts Notifications - Active and select Dashboards Global Routing tab.","title":"Setup Dashboards Global Integrations"},{"location":"how-to/setup-dashboards-global-integrations/#notification-severities","text":"Notification Severities. For each notifications severity Info Warning Error you can either use the slider to use the default routing or use the icon to customize the notification integrations. Notice: not available when default routing selected Infomy","title":"Notification Severities."},{"location":"how-to/setup-dashboards-global-integrations/#customize-notifications","text":"To customize notifications click on select the integrations that you require and click Close . Infomy Noticed: The Warning Integration were customized. You can remove these by clicking the . If you want to remove default routing groups from a severity and create custom groups , use the slider bar to remove default routing click the and follow this steps If you do not require any notifications ensure the default routing is off and delete any previously created custom notification. Infomy","title":"Customize Notifications."},{"location":"how-to/setup-servicechecks/","text":"Setup Service Checks Add Service Checks On the Axonops application menu, click Service Checks and select Setup tab. Infomy Create Services Below there few examples copy and Paste inside. and click save { shellchecks : [ { name : check_elastic , shell : /bin/bash , script : if [ ps auxwww | grep elastic | wc -l -lt 1 ] then exit 2 else exit 0 fi , interval : 5m , timeout : 1m } ], httpchecks : [], tcpchecks : [ { name : elastic_tcp_endpoint_check , interval : 5s , timeout : 1m , tcp : localhost:9200 } ] } Example: Infomy Delete Services To Delete a service copy and Paste inside. and click save { shellchecks : [], httpchecks : [], tcpchecks : [] } Example: Infomy","title":"Setup Service Checks"},{"location":"how-to/setup-servicechecks/#setup-service-checks","text":"","title":"Setup Service Checks"},{"location":"how-to/setup-servicechecks/#add-service-checks","text":"On the Axonops application menu, click Service Checks and select Setup tab. Infomy","title":"Add Service Checks"},{"location":"how-to/setup-servicechecks/#create-services","text":"Below there few examples copy and Paste inside. and click save { shellchecks : [ { name : check_elastic , shell : /bin/bash , script : if [ ps auxwww | grep elastic | wc -l -lt 1 ] then exit 2 else exit 0 fi , interval : 5m , timeout : 1m } ], httpchecks : [], tcpchecks : [ { name : elastic_tcp_endpoint_check , interval : 5s , timeout : 1m , tcp : localhost:9200 } ] } Example: Infomy","title":"Create Services"},{"location":"how-to/setup-servicechecks/#delete-services","text":"To Delete a service copy and Paste inside. and click save { shellchecks : [], httpchecks : [], tcpchecks : [] } Example: Infomy","title":"Delete Services"},{"location":"installation/axon-agent/install/","text":"axon-agent installation There 2 elements to the AxonOps agent. The first is the axon-agent, which is a native application for Linux running as a standalone daemon process. The second is the Java agent which is added to the Java process. Two components communicate with each other using the Unix domain socket. The reason for this approach are the following requirements we have on the agent process. No JMX Metrics must push metrics from Cassandra all the way to the AxonOps server - never pull. AxonOps Java agent will push the metrics to the AxonOps native agent, which in turn pushes them to the AxonOps server. Scraping a large volume of metrics against the JMX is slow. We also wanted to avoid exposing an HTTP endpoint within Cassandra like the Prometheus JMX exporter does. The messaging between native agent and Java agent are bi-directional - i.e. AxonOps server sends control messages to Cassandra for operations such as repair and backups without the use of JMX. This section describes how to install and configure both the native agent and Java agent. CentOS / RedHat installer printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-agent Debian / Ubuntu installer sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-agent Package details Configuration: /etc/axonops/axon-agent.yml Binary: usr/share/axonops/axon-agent Logs : /var/log/axonops/axon-agent.log Systemd service: /usr/lib/systemd/system/axon-agent.service certificate file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.crt key file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.key Configuration Make sure axon-agent configuration points to the correct axon-server address and your organisation name is specified: axon-server : hosts : axon-server_endpoint # Specify axon-server IP axon-server.mycompany.com axon-agent : org : my-company-test # Specify your organisation name type : cassandra NTP : host : ntp.mycompany.com # Specify you NTP server IP address or hostname Start axon-agent systemctl daemon-reload systemctl start axon-agent systemctl status axon-agent This will start the axon-agent process as the axonops user, which was created during the package installation. Note that you will have to refresh axon-dash page to show the newly connected node. Next Steps To complete your agent installation you will need to follow the steps in the link below: cassandra","title":"axon-agent installation"},{"location":"installation/axon-agent/install/#axon-agent-installation","text":"There 2 elements to the AxonOps agent. The first is the axon-agent, which is a native application for Linux running as a standalone daemon process. The second is the Java agent which is added to the Java process. Two components communicate with each other using the Unix domain socket. The reason for this approach are the following requirements we have on the agent process. No JMX Metrics must push metrics from Cassandra all the way to the AxonOps server - never pull. AxonOps Java agent will push the metrics to the AxonOps native agent, which in turn pushes them to the AxonOps server. Scraping a large volume of metrics against the JMX is slow. We also wanted to avoid exposing an HTTP endpoint within Cassandra like the Prometheus JMX exporter does. The messaging between native agent and Java agent are bi-directional - i.e. AxonOps server sends control messages to Cassandra for operations such as repair and backups without the use of JMX. This section describes how to install and configure both the native agent and Java agent.","title":"axon-agent installation"},{"location":"installation/axon-agent/install/#centos-redhat-installer","text":"printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-agent","title":"CentOS / RedHat installer"},{"location":"installation/axon-agent/install/#debian-ubuntu-installer","text":"sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-agent","title":"Debian / Ubuntu installer"},{"location":"installation/axon-agent/install/#package-details","text":"Configuration: /etc/axonops/axon-agent.yml Binary: usr/share/axonops/axon-agent Logs : /var/log/axonops/axon-agent.log Systemd service: /usr/lib/systemd/system/axon-agent.service certificate file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.crt key file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.key","title":"Package details"},{"location":"installation/axon-agent/install/#configuration","text":"Make sure axon-agent configuration points to the correct axon-server address and your organisation name is specified: axon-server : hosts : axon-server_endpoint # Specify axon-server IP axon-server.mycompany.com axon-agent : org : my-company-test # Specify your organisation name type : cassandra NTP : host : ntp.mycompany.com # Specify you NTP server IP address or hostname","title":"Configuration"},{"location":"installation/axon-agent/install/#start-axon-agent","text":"systemctl daemon-reload systemctl start axon-agent systemctl status axon-agent This will start the axon-agent process as the axonops user, which was created during the package installation. Note that you will have to refresh axon-dash page to show the newly connected node.","title":"Start axon-agent"},{"location":"installation/axon-agent/install/#next-steps","text":"To complete your agent installation you will need to follow the steps in the link below: cassandra","title":"Next Steps"},{"location":"installation/axon-dash/install/","text":"AxonOps GUI installation AxonOps GUI service is installed as a separate service to AxonOps Server. The GUI service (axon-dash) can be co-hosted on the same server as the AxonOps Server process, or they can be running on 2 separate servers. This section describes the installation process for the GUI service. CentOS / RedHat installer printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-dash Debian / Ubuntu installer sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-dash Package details Configuration: /etc/axonops/axon-dash.yml Binary: /usr/share/axonops/axon-dash Logs: /var/log/axonops/axon-dash.log Systemd service: /usr/lib/systemd/system/axon-dash.service Copyright : /usr/share/doc/axonops/axon-dash/copyright Licenses : /usr/share/axonops/licenses/axon-dash/ Configuration Make sure axon-dash configuration points to the correct axon-server listening address: axon-dash configuration file /etc/axonops/axon-dash.yml : axon-dash : # The listening address of axon-dash host : 0.0.0.0 port : 3000 axon-server : public_endpoints : http://axon-server.public:8080, https://axon-server.public # Public HTTP endpoint to axon-server API. This can be a list with comma separator. http://127.0.0.1 or http://locahost are always wrong. context_path : # example : /gui axon-server configuration update Make sure axon-server configuration is up to date and point to axon-dash and elasticsearch listening address: axon-server configuration file /etc/axonops/axon-server.yml : host : 0.0.0.0 # axon-server listening address port : 8080 # axon-server listening port elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d Restart axon-server after updating it's configuration sudo systemctl restart axon-server Start axon-dash sudo systemctl daemon-reload sudo systemctl start axon-dash sudo systemctl status axon-dash This will start the axon-dash process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:3000 . Installing axon-agent Now axon-dash is installed, you can start installing axon-agent","title":"AxonOps GUI Server"},{"location":"installation/axon-dash/install/#axonops-gui-installation","text":"AxonOps GUI service is installed as a separate service to AxonOps Server. The GUI service (axon-dash) can be co-hosted on the same server as the AxonOps Server process, or they can be running on 2 separate servers. This section describes the installation process for the GUI service.","title":"AxonOps GUI installation"},{"location":"installation/axon-dash/install/#centos-redhat-installer","text":"printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-dash","title":"CentOS / RedHat installer"},{"location":"installation/axon-dash/install/#debian-ubuntu-installer","text":"sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-dash","title":"Debian / Ubuntu installer"},{"location":"installation/axon-dash/install/#package-details","text":"Configuration: /etc/axonops/axon-dash.yml Binary: /usr/share/axonops/axon-dash Logs: /var/log/axonops/axon-dash.log Systemd service: /usr/lib/systemd/system/axon-dash.service Copyright : /usr/share/doc/axonops/axon-dash/copyright Licenses : /usr/share/axonops/licenses/axon-dash/","title":"Package details"},{"location":"installation/axon-dash/install/#configuration","text":"Make sure axon-dash configuration points to the correct axon-server listening address: axon-dash configuration file /etc/axonops/axon-dash.yml : axon-dash : # The listening address of axon-dash host : 0.0.0.0 port : 3000 axon-server : public_endpoints : http://axon-server.public:8080, https://axon-server.public # Public HTTP endpoint to axon-server API. This can be a list with comma separator. http://127.0.0.1 or http://locahost are always wrong. context_path : # example : /gui","title":"Configuration"},{"location":"installation/axon-dash/install/#axon-server-configuration-update","text":"Make sure axon-server configuration is up to date and point to axon-dash and elasticsearch listening address: axon-server configuration file /etc/axonops/axon-server.yml : host : 0.0.0.0 # axon-server listening address port : 8080 # axon-server listening port elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d Restart axon-server after updating it's configuration sudo systemctl restart axon-server","title":"axon-server configuration update"},{"location":"installation/axon-dash/install/#start-axon-dash","text":"sudo systemctl daemon-reload sudo systemctl start axon-dash sudo systemctl status axon-dash This will start the axon-dash process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:3000 .","title":"Start axon-dash"},{"location":"installation/axon-dash/install/#installing-axon-agent","text":"Now axon-dash is installed, you can start installing axon-agent","title":"Installing axon-agent"},{"location":"installation/axon-server/centos/","text":"axon-server installation (CentOS / RedHat) Prerequisites Elasticsearch stores all of the collected data by axon-server. Let's install Java 8 and Elasticsearch first. Installing JDK Elasticsearch supports either OpenJDK or Oracle JDK. Since Oracle has changed the licensing model as of January 2019 w suggest using OpenJDK. Run the following commands for OpenJDK: sudo yum install java-1.8.0-openjdk-devel Run the following commands for Oracle JDK: wget -c --header Cookie: oraclelicense=accept-securebackup-cookie http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm sudo rpm -i jdk-8u131-linux-x64.rpm Installing Elasticsearch wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz tar -xzf elasticsearch-6.5.4.tar.gz Increase the bulk queue size of Elasticsearch by running the following command: sudo echo thread_pool.bulk.queue_size: 2000 elasticsearch-6.5.4/config/elasticsearch.yml Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. You can increase the limits by running the following command: sudo sysctl -w vm.max_map_count = 262144 Also, Elasticsearch needs max file descriptors system settings at least to 65536. echo elasticsearch - nofile 65536 | sudo tee --append /etc/security/limits.conf /dev/null Add an elasticsearch user sudo adduser elasticsearch Move elasticsearch to elasticsearch home directory sudo mv elasticsearch-6.5.4 /home/elasticsearch/ sudo chown elasticsearch:elasticsearch /home/elasticsearch/ -R Start Elasticsearch as a daemon from the elasticsearch user: sudo -u elasticsearch /home/elasticsearch/elasticsearch-6.5.4/bin/elasticsearch -d After a short period of time, you can verify that your Elasticsearch node is running by sending an HTTP request to port 9200 on localhost: curl -X GET localhost:9200/ axon-server installer printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-server Package details Configuration: /etc/axonops/axon-server.yml Binary: /usr/share/axonops/axon-server Logs: /var/log/axonops/axon-server.log Systemd service: /usr/lib/systemd/system/axon-server.service Copyright : /usr/share/doc/axonops/axon-server/copyright Licenses : /usr/share/axonops/licenses/axon-server/ Start the server sudo systemctl daemon-reload sudo systemctl start axon-server sudo systemctl status axon-server This will start the axon-server process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:8080 . Configuration defaults host : 0.0.0.0 # axon-server listening address (used by axon-dash and axon-agent) port : 8080 # axon-server HTTP API listening port (used by axon-dash) elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d Installing axon-dash Now axon-server is installed, you can start installing axon-dash","title":"Installing on Centos/Redhat"},{"location":"installation/axon-server/centos/#axon-server-installation-centos-redhat","text":"","title":"axon-server installation (CentOS / RedHat)"},{"location":"installation/axon-server/centos/#prerequisites","text":"Elasticsearch stores all of the collected data by axon-server. Let's install Java 8 and Elasticsearch first.","title":"Prerequisites"},{"location":"installation/axon-server/centos/#installing-jdk","text":"Elasticsearch supports either OpenJDK or Oracle JDK. Since Oracle has changed the licensing model as of January 2019 w suggest using OpenJDK. Run the following commands for OpenJDK: sudo yum install java-1.8.0-openjdk-devel Run the following commands for Oracle JDK: wget -c --header Cookie: oraclelicense=accept-securebackup-cookie http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm sudo rpm -i jdk-8u131-linux-x64.rpm","title":"Installing JDK"},{"location":"installation/axon-server/centos/#installing-elasticsearch","text":"wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz tar -xzf elasticsearch-6.5.4.tar.gz Increase the bulk queue size of Elasticsearch by running the following command: sudo echo thread_pool.bulk.queue_size: 2000 elasticsearch-6.5.4/config/elasticsearch.yml Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. You can increase the limits by running the following command: sudo sysctl -w vm.max_map_count = 262144 Also, Elasticsearch needs max file descriptors system settings at least to 65536. echo elasticsearch - nofile 65536 | sudo tee --append /etc/security/limits.conf /dev/null Add an elasticsearch user sudo adduser elasticsearch Move elasticsearch to elasticsearch home directory sudo mv elasticsearch-6.5.4 /home/elasticsearch/ sudo chown elasticsearch:elasticsearch /home/elasticsearch/ -R Start Elasticsearch as a daemon from the elasticsearch user: sudo -u elasticsearch /home/elasticsearch/elasticsearch-6.5.4/bin/elasticsearch -d After a short period of time, you can verify that your Elasticsearch node is running by sending an HTTP request to port 9200 on localhost: curl -X GET localhost:9200/","title":"Installing Elasticsearch"},{"location":"installation/axon-server/centos/#axon-server-installer","text":"printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-server","title":"axon-server installer"},{"location":"installation/axon-server/centos/#package-details","text":"Configuration: /etc/axonops/axon-server.yml Binary: /usr/share/axonops/axon-server Logs: /var/log/axonops/axon-server.log Systemd service: /usr/lib/systemd/system/axon-server.service Copyright : /usr/share/doc/axonops/axon-server/copyright Licenses : /usr/share/axonops/licenses/axon-server/","title":"Package details"},{"location":"installation/axon-server/centos/#start-the-server","text":"sudo systemctl daemon-reload sudo systemctl start axon-server sudo systemctl status axon-server This will start the axon-server process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:8080 .","title":"Start the server"},{"location":"installation/axon-server/centos/#configuration-defaults","text":"host : 0.0.0.0 # axon-server listening address (used by axon-dash and axon-agent) port : 8080 # axon-server HTTP API listening port (used by axon-dash) elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d","title":"Configuration defaults"},{"location":"installation/axon-server/centos/#installing-axon-dash","text":"Now axon-server is installed, you can start installing axon-dash","title":"Installing axon-dash"},{"location":"installation/axon-server/elastic/","text":"Installing Elasticsearch wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz tar -xzf elasticsearch-6.5.4.tar.gz Increase the bulk queue size of Elasticsearch by running the following command: sudo echo thread_pool.bulk.queue_size: 2000 elasticsearch-6.5.4/config/elasticsearch.yml Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. You can increase the limits by running the following command: sudo sysctl -w vm.max_map_count = 262144 Also, Elasticsearch needs max file descriptors system settings at least to 65536. echo elasticsearch - nofile 65536 | sudo tee --append /etc/security/limits.conf /dev/null Add an elasticsearch user sudo adduser elasticsearch Move elasticsearch to elasticsearch home directory sudo mv elasticsearch-6.5.4 /home/elasticsearch/ sudo chown elasticsearch:elasticsearch /home/elasticsearch/ -R Start Elasticsearch as a daemon from the elasticsearch user: sudo -u elasticsearch /home/elasticsearch/elasticsearch-6.5.4/bin/elasticsearch -d After a short period of time, you can verify that your Elasticsearch node is running by sending an HTTP request to port 9200 on localhost: curl -X GET localhost:9200/","title":"Elastic"},{"location":"installation/axon-server/elastic/#installing-elasticsearch","text":"wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz tar -xzf elasticsearch-6.5.4.tar.gz Increase the bulk queue size of Elasticsearch by running the following command: sudo echo thread_pool.bulk.queue_size: 2000 elasticsearch-6.5.4/config/elasticsearch.yml Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. You can increase the limits by running the following command: sudo sysctl -w vm.max_map_count = 262144 Also, Elasticsearch needs max file descriptors system settings at least to 65536. echo elasticsearch - nofile 65536 | sudo tee --append /etc/security/limits.conf /dev/null Add an elasticsearch user sudo adduser elasticsearch Move elasticsearch to elasticsearch home directory sudo mv elasticsearch-6.5.4 /home/elasticsearch/ sudo chown elasticsearch:elasticsearch /home/elasticsearch/ -R Start Elasticsearch as a daemon from the elasticsearch user: sudo -u elasticsearch /home/elasticsearch/elasticsearch-6.5.4/bin/elasticsearch -d After a short period of time, you can verify that your Elasticsearch node is running by sending an HTTP request to port 9200 on localhost: curl -X GET localhost:9200/","title":"Installing Elasticsearch"},{"location":"installation/axon-server/install/","text":"Package details Configuration: /etc/axonops/axon-server.yml Binary: /usr/share/axonops/axon-server Logs: /var/log/axonops/axon-server.log Systemd service: /usr/lib/systemd/system/axon-server.service Copyright : /usr/share/doc/axonops/axon-server/copyright Licenses : /usr/share/axonops/licenses/axon-server/ Start the server sudo systemctl daemon-reload sudo systemctl start axon-server sudo systemctl status axon-server This will start the axon-server process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:8080 . Configuration defaults host : 0.0.0.0 # axon-server listening address (used by axon-dash and axon-agent) port : 8080 # axon-server HTTP API listening port (used by axon-dash) elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d Installing axon-dash Now axon-server is installed, you can start installing axon-dash","title":"Install"},{"location":"installation/axon-server/install/#package-details","text":"Configuration: /etc/axonops/axon-server.yml Binary: /usr/share/axonops/axon-server Logs: /var/log/axonops/axon-server.log Systemd service: /usr/lib/systemd/system/axon-server.service Copyright : /usr/share/doc/axonops/axon-server/copyright Licenses : /usr/share/axonops/licenses/axon-server/","title":"Package details"},{"location":"installation/axon-server/install/#start-the-server","text":"sudo systemctl daemon-reload sudo systemctl start axon-server sudo systemctl status axon-server This will start the axon-server process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:8080 .","title":"Start the server"},{"location":"installation/axon-server/install/#configuration-defaults","text":"host : 0.0.0.0 # axon-server listening address (used by axon-dash and axon-agent) port : 8080 # axon-server HTTP API listening port (used by axon-dash) elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d","title":"Configuration defaults"},{"location":"installation/axon-server/install/#installing-axon-dash","text":"Now axon-server is installed, you can start installing axon-dash","title":"Installing axon-dash"},{"location":"installation/axon-server/ubuntu/","text":"axon-server installation (Debian / Ubuntu) Prerequisites Elasticsearch stores all of the collected data by axon-server. Let's install Java 8 and Elasticsearch first. Installing JDK Elasticsearch supports either OpenJDK or Oracle JDK. Since Oracle has changed the licensing model as of January 2019 w suggest using OpenJDK. Run the following commands for OpenJDK: sudo apt-get update sudo apt-get install default-jdk Run the following commands for Oracle JDK: sudo apt-get update sudo apt-get install dirmngr sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main | sudo tee /etc/apt/sources.list.d/webupd8team-java.list sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 sudo apt-get update sudo apt-get install oracle-java8-installer Once you've accepted the license agreement the JDK will install. Installing Elasticsearch wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz tar -xzf elasticsearch-6.5.4.tar.gz Increase the bulk queue size of Elasticsearch by running the following command: sudo echo thread_pool.bulk.queue_size: 2000 elasticsearch-6.5.4/config/elasticsearch.yml Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. You can increase the limits by running the following command: sudo sysctl -w vm.max_map_count = 262144 Also, Elasticsearch needs max file descriptors system settings at least to 65536. echo elasticsearch - nofile 65536 | sudo tee --append /etc/security/limits.conf /dev/null Add an elasticsearch user sudo adduser elasticsearch Move elasticsearch to elasticsearch home directory sudo mv elasticsearch-6.5.4 /home/elasticsearch/ sudo chown elasticsearch:elasticsearch /home/elasticsearch/ -R Start Elasticsearch as a daemon from the elasticsearch user: sudo -u elasticsearch /home/elasticsearch/elasticsearch-6.5.4/bin/elasticsearch -d After a short period of time, you can verify that your Elasticsearch node is running by sending an HTTP request to port 9200 on localhost: curl -X GET localhost:9200/ axon-server installer sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-server Package details Configuration: /etc/axonops/axon-server.yml Binary: /usr/share/axonops/axon-server Logs: /var/log/axonops/axon-server.log Systemd service: /usr/lib/systemd/system/axon-server.service Copyright : /usr/share/doc/axonops/axon-server/copyright Licenses : /usr/share/axonops/licenses/axon-server/ Start the server sudo systemctl daemon-reload sudo systemctl start axon-server sudo systemctl status axon-server This will start the axon-server process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:8080 . Configuration defaults host : 0.0.0.0 # axon-server listening address (used by axon-dash and axon-agent) port : 8080 # axon-server HTTP API listening port (used by axon-dash) elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d Installing axon-dash Now axon-server is installed, you can start installing axon-dash","title":"Installing on Ubuntu/Debian"},{"location":"installation/axon-server/ubuntu/#axon-server-installation-debian-ubuntu","text":"","title":"axon-server installation (Debian / Ubuntu)"},{"location":"installation/axon-server/ubuntu/#prerequisites","text":"Elasticsearch stores all of the collected data by axon-server. Let's install Java 8 and Elasticsearch first.","title":"Prerequisites"},{"location":"installation/axon-server/ubuntu/#installing-jdk","text":"Elasticsearch supports either OpenJDK or Oracle JDK. Since Oracle has changed the licensing model as of January 2019 w suggest using OpenJDK. Run the following commands for OpenJDK: sudo apt-get update sudo apt-get install default-jdk Run the following commands for Oracle JDK: sudo apt-get update sudo apt-get install dirmngr sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb http://ppa.launchpad.net/webupd8team/java/ubuntu xenial main | sudo tee /etc/apt/sources.list.d/webupd8team-java.list sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys EEA14886 sudo apt-get update sudo apt-get install oracle-java8-installer Once you've accepted the license agreement the JDK will install.","title":"Installing JDK"},{"location":"installation/axon-server/ubuntu/#installing-elasticsearch","text":"wget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-6.5.4.tar.gz tar -xzf elasticsearch-6.5.4.tar.gz Increase the bulk queue size of Elasticsearch by running the following command: sudo echo thread_pool.bulk.queue_size: 2000 elasticsearch-6.5.4/config/elasticsearch.yml Elasticsearch uses a mmapfs directory by default to store its indices. The default operating system limits on mmap counts is likely to be too low, which may result in out of memory exceptions. You can increase the limits by running the following command: sudo sysctl -w vm.max_map_count = 262144 Also, Elasticsearch needs max file descriptors system settings at least to 65536. echo elasticsearch - nofile 65536 | sudo tee --append /etc/security/limits.conf /dev/null Add an elasticsearch user sudo adduser elasticsearch Move elasticsearch to elasticsearch home directory sudo mv elasticsearch-6.5.4 /home/elasticsearch/ sudo chown elasticsearch:elasticsearch /home/elasticsearch/ -R Start Elasticsearch as a daemon from the elasticsearch user: sudo -u elasticsearch /home/elasticsearch/elasticsearch-6.5.4/bin/elasticsearch -d After a short period of time, you can verify that your Elasticsearch node is running by sending an HTTP request to port 9200 on localhost: curl -X GET localhost:9200/","title":"Installing Elasticsearch"},{"location":"installation/axon-server/ubuntu/#axon-server-installer","text":"sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-server","title":"axon-server installer"},{"location":"installation/axon-server/ubuntu/#package-details","text":"Configuration: /etc/axonops/axon-server.yml Binary: /usr/share/axonops/axon-server Logs: /var/log/axonops/axon-server.log Systemd service: /usr/lib/systemd/system/axon-server.service Copyright : /usr/share/doc/axonops/axon-server/copyright Licenses : /usr/share/axonops/licenses/axon-server/","title":"Package details"},{"location":"installation/axon-server/ubuntu/#start-the-server","text":"sudo systemctl daemon-reload sudo systemctl start axon-server sudo systemctl status axon-server This will start the axon-server process as the axonops user, which was created during the package installation. The default listening address is 0.0.0.0:8080 .","title":"Start the server"},{"location":"installation/axon-server/ubuntu/#configuration-defaults","text":"host : 0.0.0.0 # axon-server listening address (used by axon-dash and axon-agent) port : 8080 # axon-server HTTP API listening port (used by axon-dash) elastic_host : localhost # Elasticsearch endpoint elastic_port : 9200 # Elasticsearch port axon-dash : # This must point to axon-dash address host : 127.0.0.1 port : 3000 https : false alerting : # How long to wait before sending a notification again if it has already # been sent successfully for an alert. (Usually ~3h or more). notification_interval : 3h retention : events : 8w # logs and events retention. Must be expressed in weeks (w) metrics : high_resolution : 14d # High frequency metrics. Must be expressed in days (d) med_resolution : 12w # Must be expressed in weeks (w) low_resolution : 12M # Must be expressed in months (M) super_low_resolution : 2y # Must be expressed in years (y) backups : # Those are use as defaults but can be overridden from the UI local : 10d remote : 30d","title":"Configuration defaults"},{"location":"installation/axon-server/ubuntu/#installing-axon-dash","text":"Now axon-server is installed, you can start installing axon-dash","title":"Installing axon-dash"},{"location":"installation/cassandra-agent/install/","text":"AxonOps Cassandra agent installation This agent will enable metrics collection, adaptive repairs and backups for Cassandra. Available versions Apache Cassandra 3.0.x Apache Cassandra 3.11.x Cassandra agent installation Make sure that the version of your Cassandra and Cassandra agent are compatible from the compatibility matrix . CentOS / RedHat installer printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-cassandra version -agent Debian / Ubuntu installer sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-cassandra version -agent Note: This will install our Cassandra agent and it's dependency axon-agent Configuration Update the following highlighted lines from /etc/axonops/axon-agent.yml : axon-server : hosts : axon-server_endpoint # Specify axon-server IP axon-server.mycompany.com axon-agent : org : my-company-test # Specify your organisation name NTP : host : ntp.mycompany.com # Specify your NTP server IP address or hostname cassandra : tier0 : # metrics collected every 5 seconds metrics : jvm_ : - java.lang:* cas_ : - org.apache.cassandra.metrics:* - org.apache.cassandra.net:type=FailureDetector tier1 : frequency : 300 # metrics collected every 300 seconds (5m) metrics : cas_ : - org.apache.cassandra.metrics:name=EstimatedPartitionCount,* #tier2: # frequency: 3600 # 1h #tier3: # frequency: 86400 # 1d blacklist : # You can blacklist metrics based on MBean query pattern - org.apache.cassandra.metrics:type=ColumnFamily,* # duplication of table metrics - org.apache.cassandra.metrics:name=SnapshotsSize,* # Collecting SnapshotsSize metrics slows down collection free_text_blacklist : # You can blacklist metrics based on Regex pattern - org.apache.cassandra.metrics:type=ThreadPools,path=internal,scope=Repair#.* warningThresholdMillis : 100 # This will warn in logs when a MBean takes longer than the specified value. Configure Cassandra Edit cassandra-env.sh usually located in your Cassandra install path such as / Cassandra Installation Directory /conf/cassandra-env.sh and append the following line at the end of the file: JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-cassandra version -agent.jar=/etc/axonops/axon-agent.yml example with Cassandra agent version 3.11 : JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-cassandra3.11-agent.jar=/etc/axonops/axon-agent.yml Add axonops user to Cassandra user group and Cassandra user to axonops group sudo usermod -aG your_cassandra_group axonops sudo usermod -aG axonops your_cassandra_user Start Cassandra All you need to do now is start Cassandra. Cassandra agent Package details Configuration: /etc/axonops/axon-agent.yml Binary: /usr/share/axonops/axon-cassandra version -agent.jar Version number: /usr/share/axonops/axon-cassandra version -agent.version Copyright : /usr/share/doc/axonops/axon-cassandra version -agent/copyright Licenses : /usr/share/axonops/licenses/axon-cassandra version -agent/ axon-agent Package details (dependency of Cassandra agent) Configuration: /etc/axonops/axon-agent.yml Binary: usr/share/axonops/axon-agent Logs : /var/log/axonops/axon-agent.log Systemd service: /usr/lib/systemd/system/axon-agent.service certificate file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.crt key file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.key","title":"AxonOps Cassandra Agent"},{"location":"installation/cassandra-agent/install/#axonops-cassandra-agent-installation","text":"This agent will enable metrics collection, adaptive repairs and backups for Cassandra.","title":"AxonOps Cassandra agent installation"},{"location":"installation/cassandra-agent/install/#available-versions","text":"Apache Cassandra 3.0.x Apache Cassandra 3.11.x","title":"Available versions"},{"location":"installation/cassandra-agent/install/#cassandra-agent-installation","text":"Make sure that the version of your Cassandra and Cassandra agent are compatible from the compatibility matrix .","title":"Cassandra agent installation"},{"location":"installation/cassandra-agent/install/#centos-redhat-installer","text":"printf %s\\n%s\\n%s\\n%s\\n%s\\n%s\\n [axonops] name=axonops Repository baseurl=https://repo.digitalis.io/repository/axonops-yum/stable/x64/ enabled=1 gpgcheck=0 | sudo tee /etc/yum.repos.d/axonops.repo sudo yum install axon-cassandra version -agent","title":"CentOS / RedHat installer"},{"location":"installation/cassandra-agent/install/#debian-ubuntu-installer","text":"sudo cp /etc/apt/sources.list /etc/apt/sources.list_backup echo deb https://repo.digitalis.io/repository/axonops-apt xenial main | sudo tee /etc/apt/sources.list.d/axonops.list sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 727BDA4A sudo apt-get update sudo apt-get install axon-cassandra version -agent Note: This will install our Cassandra agent and it's dependency axon-agent","title":"Debian / Ubuntu installer"},{"location":"installation/cassandra-agent/install/#configuration","text":"Update the following highlighted lines from /etc/axonops/axon-agent.yml : axon-server : hosts : axon-server_endpoint # Specify axon-server IP axon-server.mycompany.com axon-agent : org : my-company-test # Specify your organisation name NTP : host : ntp.mycompany.com # Specify your NTP server IP address or hostname cassandra : tier0 : # metrics collected every 5 seconds metrics : jvm_ : - java.lang:* cas_ : - org.apache.cassandra.metrics:* - org.apache.cassandra.net:type=FailureDetector tier1 : frequency : 300 # metrics collected every 300 seconds (5m) metrics : cas_ : - org.apache.cassandra.metrics:name=EstimatedPartitionCount,* #tier2: # frequency: 3600 # 1h #tier3: # frequency: 86400 # 1d blacklist : # You can blacklist metrics based on MBean query pattern - org.apache.cassandra.metrics:type=ColumnFamily,* # duplication of table metrics - org.apache.cassandra.metrics:name=SnapshotsSize,* # Collecting SnapshotsSize metrics slows down collection free_text_blacklist : # You can blacklist metrics based on Regex pattern - org.apache.cassandra.metrics:type=ThreadPools,path=internal,scope=Repair#.* warningThresholdMillis : 100 # This will warn in logs when a MBean takes longer than the specified value.","title":"Configuration"},{"location":"installation/cassandra-agent/install/#configure-cassandra","text":"Edit cassandra-env.sh usually located in your Cassandra install path such as / Cassandra Installation Directory /conf/cassandra-env.sh and append the following line at the end of the file: JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-cassandra version -agent.jar=/etc/axonops/axon-agent.yml example with Cassandra agent version 3.11 : JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-cassandra3.11-agent.jar=/etc/axonops/axon-agent.yml","title":"Configure Cassandra"},{"location":"installation/cassandra-agent/install/#add-axonops-user-to-cassandra-user-group-and-cassandra-user-to-axonops-group","text":"sudo usermod -aG your_cassandra_group axonops sudo usermod -aG axonops your_cassandra_user","title":"Add axonops user to Cassandra user group and Cassandra user to axonops group"},{"location":"installation/cassandra-agent/install/#start-cassandra","text":"All you need to do now is start Cassandra.","title":"Start Cassandra"},{"location":"installation/cassandra-agent/install/#cassandra-agent-package-details","text":"Configuration: /etc/axonops/axon-agent.yml Binary: /usr/share/axonops/axon-cassandra version -agent.jar Version number: /usr/share/axonops/axon-cassandra version -agent.version Copyright : /usr/share/doc/axonops/axon-cassandra version -agent/copyright Licenses : /usr/share/axonops/licenses/axon-cassandra version -agent/","title":"Cassandra agent Package details"},{"location":"installation/cassandra-agent/install/#axon-agent-package-details-dependency-of-cassandra-agent","text":"Configuration: /etc/axonops/axon-agent.yml Binary: usr/share/axonops/axon-agent Logs : /var/log/axonops/axon-agent.log Systemd service: /usr/lib/systemd/system/axon-agent.service certificate file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.crt key file used for it's OpenTSDB endpoint when SSL is active: /etc/axonops/agent.key","title":"axon-agent Package details (dependency of Cassandra agent)"},{"location":"installation/compat_matrix/compat_matrix/","text":"AxonOps Server Operating Systems Target Architecture RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64 AxonOps GUI Server Operating Systems Target Architecture RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64 AxonOps Cassandra Agent System AxonOps Cassandra Agent Version Operating Systems Target Architecture Cassandra 3.0.x 3.0 RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64 Cassandra 3.11.x 3.11 RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64","title":"Compatibility matrix"},{"location":"installation/compat_matrix/compat_matrix/#axonops-server","text":"Operating Systems Target Architecture RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64","title":"AxonOps Server"},{"location":"installation/compat_matrix/compat_matrix/#axonops-gui-server","text":"Operating Systems Target Architecture RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64","title":"AxonOps GUI Server"},{"location":"installation/compat_matrix/compat_matrix/#axonops-cassandra-agent","text":"System AxonOps Cassandra Agent Version Operating Systems Target Architecture Cassandra 3.0.x 3.0 RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64 Cassandra 3.11.x 3.11 RedHat 7, CentOS 7, Ubuntu 16.04, Debian 9 x86_64","title":"AxonOps Cassandra Agent"},{"location":"installation/dse-agent/install/","text":"axon-java-agent for DSE installation This agent will enable metrics collection from DSE and enable adaptive repairs and backups. Prerequisites DSE agent needs axon-agent to be installed and configured properly. If not installed already, please go to axon-agent installation page. Setup axon-agent for DSE You'll need the specify/update the following lines from axon-agent.yml located in /etc/axonops/axon-agent.yml : axon-server : hosts : axon-server_endpoint # Specify axon-server endpoint axon-agent : host : 0.0.0.0 # axon-agent listening address for it s OpenTSDB endpoint port : 9916 # axon-agent listening port for it s OpenTSDB endpoint org : your_organisation_name # Specify your organisation name standalone_mode : false type : dse #cluster_name: standalone # comment that line ssl : false # SSL flag for it s OpenTSDB endpoint Set standalone_mode to false Set type to dse Don't forget to comment or remove the cluster_name as it will be deduced from DSE configuration. Don't forget to specify axon-server host and port if that's not already specified. DSE agent installation Make sure the version of your DSE and DSE agent are compatible from the compatibility matrix . CentOS / RedHat installer sudo yum install TODO Debian / Ubuntu installer sudo apt-get install TODO Package details Configuration: /etc/axonops/axon-java-agent.yml Binary: usr/share/axonops/axon-dse version -agent-1.0.jar Version number: usr/share/axonops/axon-dse version -agent-1.0.version Configure DSE Edit cassandra-env.sh usually located in your dse install path such as / path_to_DSE /resources/cassandra/conf/cassandra-env.sh and add at the end of the file the following line: JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-dse version -agent-1.0.jar=/etc/axonops/axon-java-agent.yml example: JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-dse6.0.4-agent-1.0.jar=/etc/axonops/axon-java-agent.yml Start DSE All you need to do now is start DSE. Configuration defaults tier0 : # metrics collected every 5 seconds metrics : jvm_ : - java.lang:* cas_ : - org.apache.cassandra.metrics:* - org.apache.cassandra.net:type=FailureDetector - com.datastax.bdp:type=dsefs,* tier1 : frequency : 300 # metrics collected every 300 seconds (5m) metrics : cas_ : - org.apache.cassandra.metrics:name=EstimatedPartitionCount,* #tier2: # frequency: 3600 # 1h #tier3: # frequency: 86400 # 1d blacklist : # You can blacklist metrics based on MBean query pattern - org.apache.cassandra.metrics:type=ColumnFamily,* # dup of tables - org.apache.cassandra.metrics:name=SnapshotsSize,* # generally takes time free_text_blacklist : # You can blacklist metrics based on Regex pattern - org.apache.cassandra.metrics:type=ThreadPools,path=internal,scope=Repair#.* warningThresholdMillis : 100 # This will warn in logs when a MBean takes longer than the specified value. whitelisted_clients : # Whitelist for CQL connections - 127.0.0.1 - ^*.*.*.*","title":"axon-java-agent for DSE installation"},{"location":"installation/dse-agent/install/#axon-java-agent-for-dse-installation","text":"This agent will enable metrics collection from DSE and enable adaptive repairs and backups.","title":"axon-java-agent for DSE installation"},{"location":"installation/dse-agent/install/#prerequisites","text":"DSE agent needs axon-agent to be installed and configured properly. If not installed already, please go to axon-agent installation page.","title":"Prerequisites"},{"location":"installation/dse-agent/install/#setup-axon-agent-for-dse","text":"You'll need the specify/update the following lines from axon-agent.yml located in /etc/axonops/axon-agent.yml : axon-server : hosts : axon-server_endpoint # Specify axon-server endpoint axon-agent : host : 0.0.0.0 # axon-agent listening address for it s OpenTSDB endpoint port : 9916 # axon-agent listening port for it s OpenTSDB endpoint org : your_organisation_name # Specify your organisation name standalone_mode : false type : dse #cluster_name: standalone # comment that line ssl : false # SSL flag for it s OpenTSDB endpoint Set standalone_mode to false Set type to dse Don't forget to comment or remove the cluster_name as it will be deduced from DSE configuration. Don't forget to specify axon-server host and port if that's not already specified.","title":"Setup axon-agent for DSE"},{"location":"installation/dse-agent/install/#dse-agent-installation","text":"Make sure the version of your DSE and DSE agent are compatible from the compatibility matrix .","title":"DSE agent installation"},{"location":"installation/dse-agent/install/#centos-redhat-installer","text":"sudo yum install TODO","title":"CentOS / RedHat installer"},{"location":"installation/dse-agent/install/#debian-ubuntu-installer","text":"sudo apt-get install TODO","title":"Debian / Ubuntu installer"},{"location":"installation/dse-agent/install/#package-details","text":"Configuration: /etc/axonops/axon-java-agent.yml Binary: usr/share/axonops/axon-dse version -agent-1.0.jar Version number: usr/share/axonops/axon-dse version -agent-1.0.version","title":"Package details"},{"location":"installation/dse-agent/install/#configure-dse","text":"Edit cassandra-env.sh usually located in your dse install path such as / path_to_DSE /resources/cassandra/conf/cassandra-env.sh and add at the end of the file the following line: JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-dse version -agent-1.0.jar=/etc/axonops/axon-java-agent.yml example: JVM_OPTS = $JVM_OPTS -javaagent:/usr/share/axonops/axon-dse6.0.4-agent-1.0.jar=/etc/axonops/axon-java-agent.yml","title":"Configure DSE"},{"location":"installation/dse-agent/install/#start-dse","text":"All you need to do now is start DSE.","title":"Start DSE"},{"location":"installation/dse-agent/install/#configuration-defaults","text":"tier0 : # metrics collected every 5 seconds metrics : jvm_ : - java.lang:* cas_ : - org.apache.cassandra.metrics:* - org.apache.cassandra.net:type=FailureDetector - com.datastax.bdp:type=dsefs,* tier1 : frequency : 300 # metrics collected every 300 seconds (5m) metrics : cas_ : - org.apache.cassandra.metrics:name=EstimatedPartitionCount,* #tier2: # frequency: 3600 # 1h #tier3: # frequency: 86400 # 1d blacklist : # You can blacklist metrics based on MBean query pattern - org.apache.cassandra.metrics:type=ColumnFamily,* # dup of tables - org.apache.cassandra.metrics:name=SnapshotsSize,* # generally takes time free_text_blacklist : # You can blacklist metrics based on Regex pattern - org.apache.cassandra.metrics:type=ThreadPools,path=internal,scope=Repair#.* warningThresholdMillis : 100 # This will warn in logs when a MBean takes longer than the specified value. whitelisted_clients : # Whitelist for CQL connections - 127.0.0.1 - ^*.*.*.*","title":"Configuration defaults"},{"location":"integrations/email-integration/","text":"Setup Email Insert Email Credentials On the Axonops application menu, select Alert Notifications - Integration . On the Setup menu, move the cusror over the email icon and click on the Add symbol. Infomy Add Emails Enter the form fields and click TEST Inserting recipient emails To enter a recipient email, enter the email address followed by either: Space : \u2423. (recommended) Enter : \"\u21b5\" Infomy Click and close the pop-up form, should now read Installed . Infomy Edit - Delete Email(s) To Edit any email click on To Delete any email click on Infomy Remove Email(s) To Remove Emails groups move the cusror over the email icon click on the Delete symbol and Confirm . Infomy","title":"Email Integration"},{"location":"integrations/email-integration/#setup-email","text":"","title":"Setup Email"},{"location":"integrations/email-integration/#insert-email-credentials","text":"On the Axonops application menu, select Alert Notifications - Integration . On the Setup menu, move the cusror over the email icon and click on the Add symbol. Infomy","title":"Insert Email Credentials"},{"location":"integrations/email-integration/#add-emails","text":"Enter the form fields and click TEST Inserting recipient emails To enter a recipient email, enter the email address followed by either: Space : \u2423. (recommended) Enter : \"\u21b5\" Infomy Click and close the pop-up form, should now read Installed . Infomy","title":"Add Emails"},{"location":"integrations/email-integration/#edit-delete-emails","text":"To Edit any email click on To Delete any email click on Infomy","title":"Edit - Delete Email(s)"},{"location":"integrations/email-integration/#remove-emails","text":"To Remove Emails groups move the cusror over the email icon click on the Delete symbol and Confirm . Infomy","title":"Remove Email(s)"},{"location":"integrations/overview/","text":"Overview Integrations List of current Integrations Send alerts to your team's Slack channel. Generate PagerDuty alerts and events. Send alerts and events to your Email.","title":"Overview"},{"location":"integrations/overview/#overview","text":"","title":"Overview"},{"location":"integrations/overview/#integrations","text":"List of current Integrations Send alerts to your team's Slack channel. Generate PagerDuty alerts and events. Send alerts and events to your Email.","title":"Integrations"},{"location":"integrations/pagerduy-integration/","text":"Setup Pagerduty Create Pagerduty Routing Key Using these steps . Please note down the pagerduty routing key Insert Pagerduty Routing Key On the Axonops application menu, select Alert Notifications - Integration . On the Setup menu, move the cursor over the pagerduty icon and click on the Add symbol. Infomy Add Routing Keys Enter Group name routing key from step 1 . and click TEST Additional Key(s) To add additional routing keys click on , enter the additional routing key and click TEST Click SUBMIT and close the pop-up form, on the Integrations Menu the Pagerduty Icon should now read Installed . Infomy Remove a key To remove any routing key click on Edit Routing key(s) To Edit any routing key click on Infomy and press to remove specific routing key or to remove group of keys and click SUMBIT Remove Routing key(s) To Remove pagerduty groups move the cusror over the pagerduty icon click on the Delete symbol and Confirm Infomy","title":"PagerDuty Integration"},{"location":"integrations/pagerduy-integration/#setup-pagerduty","text":"","title":"Setup Pagerduty"},{"location":"integrations/pagerduy-integration/#create-pagerduty-routing-key","text":"Using these steps . Please note down the pagerduty routing key","title":"Create Pagerduty Routing Key"},{"location":"integrations/pagerduy-integration/#insert-pagerduty-routing-key","text":"On the Axonops application menu, select Alert Notifications - Integration . On the Setup menu, move the cursor over the pagerduty icon and click on the Add symbol. Infomy","title":"Insert Pagerduty Routing Key"},{"location":"integrations/pagerduy-integration/#add-routing-keys","text":"Enter Group name routing key from step 1 . and click TEST","title":"Add Routing Keys"},{"location":"integrations/pagerduy-integration/#additional-keys","text":"To add additional routing keys click on , enter the additional routing key and click TEST Click SUBMIT and close the pop-up form, on the Integrations Menu the Pagerduty Icon should now read Installed . Infomy","title":"Additional Key(s)"},{"location":"integrations/pagerduy-integration/#remove-a-key","text":"To remove any routing key click on","title":"Remove a key"},{"location":"integrations/pagerduy-integration/#edit-routing-keys","text":"To Edit any routing key click on Infomy and press to remove specific routing key or to remove group of keys and click SUMBIT","title":"Edit Routing key(s)"},{"location":"integrations/pagerduy-integration/#remove-routing-keys","text":"To Remove pagerduty groups move the cusror over the pagerduty icon click on the Delete symbol and Confirm Infomy","title":"Remove Routing key(s)"},{"location":"integrations/slack-integration/","text":"Setup Slack Create Slack Incoming Webhooks Go to Slack Application On the side menu click In search box type Incoming Webhook s From the App directory click Install on Incoming WebHooks App . Infomy Click Add Configuration Infomy In Post to Channel Box select an option from the choose a channel dropdown menu . Click Add Incoming WebHooks Integration Infomy Copy and make a note of the WebHook URL that appears in the Setup Instructions . Infomy Insert Slack Webhook url. On the Axonops application menu, select Alert Notifications - Integration . On the Setup menu, move the cursor over the slack icon and click on the Add symbol. Infomy Add Webhook url(s) Enter Group name WebHook URL from step 1 . and click Infomy Additional Webhook(s) To add additional WebHook URLs click on , enter the additional WebHook URL and click TEST Infomy Remove a Webhook To remove any WebHook URL click on Click and close the pop-up form, on the Integrtions Menu the Slack Icon should now read Installed . Edit Webhook(s) To Edit any WebHook URL click on Infomy and press to remove specific WebHook URL or to remove group of keys and click SUMBIT Remove Webhook(s) To Remove Slack groups move the cusror over the slack icon click on the Delete symbol and Confirm Infomy","title":"Slack Integration"},{"location":"integrations/slack-integration/#setup-slack","text":"","title":"Setup Slack"},{"location":"integrations/slack-integration/#create-slack-incoming-webhooks","text":"Go to Slack Application On the side menu click In search box type Incoming Webhook s From the App directory click Install on Incoming WebHooks App . Infomy Click Add Configuration Infomy In Post to Channel Box select an option from the choose a channel dropdown menu . Click Add Incoming WebHooks Integration Infomy Copy and make a note of the WebHook URL that appears in the Setup Instructions . Infomy","title":"Create Slack Incoming Webhooks"},{"location":"integrations/slack-integration/#insert-slack-webhook-url","text":"On the Axonops application menu, select Alert Notifications - Integration . On the Setup menu, move the cursor over the slack icon and click on the Add symbol. Infomy","title":"Insert Slack Webhook url."},{"location":"integrations/slack-integration/#add-webhook-urls","text":"Enter Group name WebHook URL from step 1 . and click Infomy","title":"Add Webhook url(s)"},{"location":"integrations/slack-integration/#additional-webhooks","text":"To add additional WebHook URLs click on , enter the additional WebHook URL and click TEST Infomy","title":"Additional Webhook(s)"},{"location":"integrations/slack-integration/#remove-a-webhook","text":"To remove any WebHook URL click on Click and close the pop-up form, on the Integrtions Menu the Slack Icon should now read Installed .","title":"Remove a Webhook"},{"location":"integrations/slack-integration/#edit-webhooks","text":"To Edit any WebHook URL click on Infomy and press to remove specific WebHook URL or to remove group of keys and click SUMBIT","title":"Edit Webhook(s)"},{"location":"integrations/slack-integration/#remove-webhooks","text":"To Remove Slack groups move the cusror over the slack icon click on the Delete symbol and Confirm Infomy","title":"Remove Webhook(s)"},{"location":"monitoring/overview/","text":"When monitoring enterprise service there are 3 categories of how the service is performing that we generally capture and monitor. These are; Performance metrics Events (logs) Service availability Performance Metrics Performance metrics in Cassandra is highly extensive and there is a large number that can be captured to understand how Cassandra is performing. Another key metrics that also must be captured in order to effectively understand the performance of a database is the system resource utilisations. AxonOps agent captures both Cassandra and OS metrics and pushes them to the AxonOps server. Events Cassandra event logs are, by default, written to log files. There are important information in the log files that allows SRE's and DevOps engineers to identify issues when they occur. AxonOps agent captures the logs and pushes them to the AxonOps server. These logs are visible within AxonOps dashboard allowing quick access to them without having to log in to the individual servers. Service Availability Checking the momentary service availability and dashboards gives confidence that all services are running correctly as expected. Example service checks that allow engineers to gain confidence in the service availability are: System process Network open ports - e.g. CQL and storage ports Database availability - e.g. can execute CQL query AxonOps Monitoring AxonOps implements all three types of monitoring described above. AxonOps agent captures the information, sends them securely to AxonOps server, and the information is stored in the backend data store. AxonOps GUI provides comprehensive set of metrics dashboards combined with the event log view. It also provides separate service check status view showing the health of the cluster. This section describes how the AxonOps GUI organises the dashboards of all three types of monitoring.","title":"Monitoring Overview"},{"location":"monitoring/overview/#performance-metrics","text":"Performance metrics in Cassandra is highly extensive and there is a large number that can be captured to understand how Cassandra is performing. Another key metrics that also must be captured in order to effectively understand the performance of a database is the system resource utilisations. AxonOps agent captures both Cassandra and OS metrics and pushes them to the AxonOps server.","title":"Performance Metrics"},{"location":"monitoring/overview/#events","text":"Cassandra event logs are, by default, written to log files. There are important information in the log files that allows SRE's and DevOps engineers to identify issues when they occur. AxonOps agent captures the logs and pushes them to the AxonOps server. These logs are visible within AxonOps dashboard allowing quick access to them without having to log in to the individual servers.","title":"Events"},{"location":"monitoring/overview/#service-availability","text":"Checking the momentary service availability and dashboards gives confidence that all services are running correctly as expected. Example service checks that allow engineers to gain confidence in the service availability are: System process Network open ports - e.g. CQL and storage ports Database availability - e.g. can execute CQL query","title":"Service Availability"},{"location":"monitoring/overview/#axonops-monitoring","text":"AxonOps implements all three types of monitoring described above. AxonOps agent captures the information, sends them securely to AxonOps server, and the information is stored in the backend data store. AxonOps GUI provides comprehensive set of metrics dashboards combined with the event log view. It also provides separate service check status view showing the health of the cluster. This section describes how the AxonOps GUI organises the dashboards of all three types of monitoring.","title":"AxonOps Monitoring"},{"location":"monitoring/metricsdashboards/cassandra/alerting/","text":"","title":"Metrics Alerting Configurations"},{"location":"monitoring/metricsdashboards/cassandra/cassandra/","text":"","title":"Cassandra Metrics"},{"location":"monitoring/metricsdashboards/cassandra/overview/","text":"","title":"Overview"},{"location":"monitoring/servicechecks/alerting/","text":"Intro Service checks are automatically checked and this checks will return on of the three statuses: Service Statuses. Success Warning Error Depending on the status of the service an appropriate alert will be sent. The alert will be sent based on the Default Routing that has been setup via the integrations menu. Noticed: If the Default Routing has not been set up no alerts will be sent. Service Alerts will be sent using the following rules. Info Default routing rules will be used to send success alerts Warning Default routing rules will be used to send warning alerts Error Default routing rules will be used to send error alerts","title":"Alerting"},{"location":"monitoring/servicechecks/alerting/#intro","text":"Service checks are automatically checked and this checks will return on of the three statuses: Service Statuses. Success Warning Error Depending on the status of the service an appropriate alert will be sent. The alert will be sent based on the Default Routing that has been setup via the integrations menu. Noticed: If the Default Routing has not been set up no alerts will be sent. Service Alerts will be sent using the following rules.","title":"Intro"},{"location":"monitoring/servicechecks/alerting/#info","text":"Default routing rules will be used to send success alerts","title":"Info"},{"location":"monitoring/servicechecks/alerting/#warning","text":"Default routing rules will be used to send warning alerts","title":"Warning"},{"location":"monitoring/servicechecks/alerting/#error","text":"Default routing rules will be used to send error alerts","title":"Error"},{"location":"monitoring/servicechecks/configurations/","text":"Adding Service Checks On the Axonops application menu, click Service Checks and select Setup tab. Infomy Creating Services Below there few examples. Just copy / paste inside the editor, then click save { shellchecks : [ { name : check_cassandra_process , shell : /bin/bash , script : if [ `ps -auxwww | grep -v grep | grep org.apache.cassandra.service.CassandraDaemon | wc -l` -lt 1 ] then exit 2 else exit 0 fi , interval : 5m , timeout : 1m } ], httpchecks : [ { name : check_http_endpoint , http : https://{{.listen_address}}:80 , tls_skip_verify : true , method : GET , interval : 10s , timeout : 1m }, { name : check_http_endpoint2 , http : http://localhost:8080 , tls_skip_verify : true , method : GET , interval : 10s , timeout : 1m } ], tcpchecks : [ { name : cassandra_cql_port_check , interval : 10s , timeout : 1m , tcp : {{.listen_address}}:9042 }, { name : cassandra_storage_port_check , timeout : 1m , interval : 5m , tcp : {{.listen_address}}:7000 } ] } Note that for a Cassandra node, you can use the variable {{.listen_address}} which will correspond to Cassandra listening address. Example: Infomy Delete Services To Delete a service copy / paste into the editor and click save { shellchecks : [], httpchecks : [], tcpchecks : [] } Example: Infomy","title":"Configurations"},{"location":"monitoring/servicechecks/configurations/#adding-service-checks","text":"On the Axonops application menu, click Service Checks and select Setup tab. Infomy","title":"Adding Service Checks"},{"location":"monitoring/servicechecks/configurations/#creating-services","text":"Below there few examples. Just copy / paste inside the editor, then click save { shellchecks : [ { name : check_cassandra_process , shell : /bin/bash , script : if [ `ps -auxwww | grep -v grep | grep org.apache.cassandra.service.CassandraDaemon | wc -l` -lt 1 ] then exit 2 else exit 0 fi , interval : 5m , timeout : 1m } ], httpchecks : [ { name : check_http_endpoint , http : https://{{.listen_address}}:80 , tls_skip_verify : true , method : GET , interval : 10s , timeout : 1m }, { name : check_http_endpoint2 , http : http://localhost:8080 , tls_skip_verify : true , method : GET , interval : 10s , timeout : 1m } ], tcpchecks : [ { name : cassandra_cql_port_check , interval : 10s , timeout : 1m , tcp : {{.listen_address}}:9042 }, { name : cassandra_storage_port_check , timeout : 1m , interval : 5m , tcp : {{.listen_address}}:7000 } ] } Note that for a Cassandra node, you can use the variable {{.listen_address}} which will correspond to Cassandra listening address. Example: Infomy","title":"Creating Services"},{"location":"monitoring/servicechecks/configurations/#delete-services","text":"To Delete a service copy / paste into the editor and click save { shellchecks : [], httpchecks : [], tcpchecks : [] } Example: Infomy","title":"Delete Services"},{"location":"monitoring/servicechecks/overview/","text":"Service Checks in AxonOps allows you to configure custom checks using three types of check invocations: Shell Script HTTP endpoint check TCP endpoint check These checks are configured on the server side in the GUI, but pushed down dynamically to the agents and executed on the agents. There is no need to deploy the check scripts to individual servers like you may do with Nagios. Any changes made and saved are automatically pushed down to the agents. Notice: To be able to view your service checks you must setup . AxonDash Service Checks On the AxonOps application menu, click Service Checks , a list of all your Nodes will appear Infomy Service Checks There are 2 dimensional views to the service health status - by node or by service. By Node To view all the services for eah Node select Nodes tab and click on node's name to expand the node service's. Infomy the services will apprear with status : Ok Status Status: OK the service has been passed. Infomy Error Status Status: Error the service has been failed and the reason will appear. Infomy By Service To view all the Nodes for eah Service select Services tab and click on service name to expand it. Infomy Ok Status Status: OK the service has been completed successfully for the Node . Infomy Error Status Status: Error the service has been failed for the Node and the reason will appear. Infomy","title":"Overview"},{"location":"monitoring/servicechecks/overview/#axondash-service-checks","text":"On the AxonOps application menu, click Service Checks , a list of all your Nodes will appear Infomy","title":"AxonDash Service Checks"},{"location":"monitoring/servicechecks/overview/#service-checks","text":"There are 2 dimensional views to the service health status - by node or by service.","title":"Service Checks"},{"location":"monitoring/servicechecks/overview/#by-node","text":"To view all the services for eah Node select Nodes tab and click on node's name to expand the node service's. Infomy the services will apprear with status :","title":"By Node"},{"location":"monitoring/servicechecks/overview/#ok-status","text":"Status: OK the service has been passed. Infomy","title":"Ok Status"},{"location":"monitoring/servicechecks/overview/#error-status","text":"Status: Error the service has been failed and the reason will appear. Infomy","title":"Error Status"},{"location":"monitoring/servicechecks/overview/#by-service","text":"To view all the Nodes for eah Service select Services tab and click on service name to expand it. Infomy","title":"By Service"},{"location":"monitoring/servicechecks/overview/#ok-status_1","text":"Status: OK the service has been completed successfully for the Node . Infomy","title":"Ok Status"},{"location":"monitoring/servicechecks/overview/#error-status_1","text":"Status: Error the service has been failed for the Node and the reason will appear. Infomy","title":"Error Status"},{"location":"operations/cassandra/repair/","text":"Repairs must be completed regularly to maintain Cassandra nodes. AxonOps provide two mechanisms to ease Cassandra repairs: Scheduled repair Adapative repair service Scheduled repair You can initiate three types of schedule repair: Immediate schedule repair: these will trigger immediately once Infomy Simple schedule repair: these will trigger base on the selected schedule repeatedly Infomy Cron schedule repair: Same as simple schedule repair but the schedule will be based on a Cron expression Infomy In the following capture, you can see a running repair that has been initiated immediately and a scheduled repair that is scheduled for 12:00 AM UTC: Infomy Adapative repair service Since AxonOps collects performance metrics and logs, we built an \u201cAdaptive\u201d repair system which regulates the velocity (parallelism and pauses between each subrange repair) based on performance trending data. The regulation of repair velocity takes input from various metrics including CPU utilisation, query latencies, Cassandra thread pools pending statistics, and IOwait percentage, while tracking the schedule of repair based on gc_grace_seconds for each table. The idea of this is to achieve the following: Completion of repair within gc_grace_seconds of each table. Repair process does not affect query performance. In essence, adaptive repair regulator slows down the repair velocity when it deems the load is going to be high based on the gradient of the rate of increase of load, and speeds up to catch up with the repair schedule when the resources are more readily available. This mechanism also doesn't require JMX access. The adaptive repair service running on AxonOps server orchestrates and issues commands to the agents over the existing connection. Infomy From a user\u2019s point of view, there is only a single switch to enable this service. Keep this enabled and AxonOps will take care of the repair of all tables for you. Also you can customize the following: Blacklist some tables Specify the number of tables to repair in parallel Specify the number of segments per VNode to repair The GC grace threshold in seconds: if a table has a gc grace lesser than the specified value, it will be ignored from the adaptive repair service We are also looking into implementing adaptive compaction control using a similar logic to the adaptive repair.v","title":"Repair"},{"location":"operations/cassandra/repair/#scheduled-repair","text":"You can initiate three types of schedule repair: Immediate schedule repair: these will trigger immediately once Infomy Simple schedule repair: these will trigger base on the selected schedule repeatedly Infomy Cron schedule repair: Same as simple schedule repair but the schedule will be based on a Cron expression Infomy In the following capture, you can see a running repair that has been initiated immediately and a scheduled repair that is scheduled for 12:00 AM UTC: Infomy","title":"Scheduled repair"},{"location":"operations/cassandra/repair/#adapative-repair-service","text":"Since AxonOps collects performance metrics and logs, we built an \u201cAdaptive\u201d repair system which regulates the velocity (parallelism and pauses between each subrange repair) based on performance trending data. The regulation of repair velocity takes input from various metrics including CPU utilisation, query latencies, Cassandra thread pools pending statistics, and IOwait percentage, while tracking the schedule of repair based on gc_grace_seconds for each table. The idea of this is to achieve the following: Completion of repair within gc_grace_seconds of each table. Repair process does not affect query performance. In essence, adaptive repair regulator slows down the repair velocity when it deems the load is going to be high based on the gradient of the rate of increase of load, and speeds up to catch up with the repair schedule when the resources are more readily available. This mechanism also doesn't require JMX access. The adaptive repair service running on AxonOps server orchestrates and issues commands to the agents over the existing connection. Infomy From a user\u2019s point of view, there is only a single switch to enable this service. Keep this enabled and AxonOps will take care of the repair of all tables for you. Also you can customize the following: Blacklist some tables Specify the number of tables to repair in parallel Specify the number of segments per VNode to repair The GC grace threshold in seconds: if a table has a gc grace lesser than the specified value, it will be ignored from the adaptive repair service We are also looking into implementing adaptive compaction control using a similar logic to the adaptive repair.v","title":"Adapative repair service"},{"location":"operations/cassandra/backup/configurations/","text":"","title":"Cassandra Backup Configurations"},{"location":"operations/cassandra/backup/overview/","text":"","title":"Overview"},{"location":"overview/architecture/","text":"Architecture Before Our deployment model with the use of open source tools Infomy AxonOps Deployment Model As you can see from the diagram below, we have massively simplified the stack with AxonOps. Infomy","title":"Architecture"},{"location":"overview/architecture/#architecture","text":"","title":"Architecture"},{"location":"overview/architecture/#before","text":"Our deployment model with the use of open source tools Infomy","title":"Before"},{"location":"overview/architecture/#axonops-deployment-model","text":"As you can see from the diagram below, we have massively simplified the stack with AxonOps. Infomy","title":"AxonOps Deployment Model"},{"location":"overview/motivation/","text":"Motivation AxonOps has been developed and actively maintained by digitalis.io , a company providing managed services for Apache Cassandra\u2122 and other modern distributed data technologies. digitalis.io used a variety of modern and popular open source tools to manage its customer's data platforms to gain quick insight into how the clusters are working, and be alerted when there are issues. The open source tools we used are: Grafana - metrics dashboarding Prometheus - time series database for metrics Prometheus Alertmanager - metrics alerting ELK - Log capture and visualisation elastalert - Alerting on logs Consul - Service Discovery and Health Checks consul-alerts - Alerting on service health check failures Rundeck - Job Scheduler Ansible - Provisioning automation Problems The tools listed above served us well. They gave us the confidence to manage enterprise deployment of distributed data platforms \u2013 alerting us when there are problems, ability to diagnose issues quickly, automatically performing routine scheduled tasks etc. However, using these tools and their problems were realised over time. Too many components - There are many components including the agents that need to be installed. Takes a lot of effort to integrate all components for each customer's on-premises environment, even with fully automated implementation using Ansible. Steep learning curve - The learning curve of deploying and configuring all the components is high. Patching hell - Patching schedule became a nightmare because of the sheer number of components. Imagine having to raise change requests for patching all above components! Enterprise hell - Firewall configurations became big for enterprise on-premises customers, often required many hours of tracing which change requests were unsuccessfully executed. Multiple dashboards - Multiple dashboards for metrics, logs and service availability. Complex alerting configurations - Alert notification configurations were all over the place. Fine tuning alerts and updating them takes a lot of work. Wish List With the above problems in mind, we needed to become more efficient as a company deploying the tools we need to manage our customers. After promoting the above tools to our customers, we ate the humble pie, and went back to the drawing board with the aim of reducing the efforts needed to on-board new customers. On-premises / cloud deployment Single dashboard for metrics / logs / service health Simple alert rules configurations Capture all metrics at high resolution (with Cassandra there are well over 20,000 metrics!) Capture logs and internal events like authentication, DDL, DML etc Scheduled backup / restore feature Performs domain specific administrative tasks, including Cassandra repair Manages the following products; Apache Cassandra Apache Kafka DataStax Enterprise Confluent Enterprise Elasticsearch Apache Spark etc Simplified deployment model Single agent for collecting metrics, logs, event, configs The same agent performs execution of health checks, backup, restore No JMX to capture the metrics, and must be push from the JVM and not pull Single socket connection initiated by agent to management server requiring only simple firewall rules Bi-directional communication between agent and management server over the single socket Modern snappy GUI","title":"Motivation"},{"location":"overview/motivation/#motivation","text":"AxonOps has been developed and actively maintained by digitalis.io , a company providing managed services for Apache Cassandra\u2122 and other modern distributed data technologies. digitalis.io used a variety of modern and popular open source tools to manage its customer's data platforms to gain quick insight into how the clusters are working, and be alerted when there are issues. The open source tools we used are: Grafana - metrics dashboarding Prometheus - time series database for metrics Prometheus Alertmanager - metrics alerting ELK - Log capture and visualisation elastalert - Alerting on logs Consul - Service Discovery and Health Checks consul-alerts - Alerting on service health check failures Rundeck - Job Scheduler Ansible - Provisioning automation","title":"Motivation"},{"location":"overview/motivation/#problems","text":"The tools listed above served us well. They gave us the confidence to manage enterprise deployment of distributed data platforms \u2013 alerting us when there are problems, ability to diagnose issues quickly, automatically performing routine scheduled tasks etc. However, using these tools and their problems were realised over time. Too many components - There are many components including the agents that need to be installed. Takes a lot of effort to integrate all components for each customer's on-premises environment, even with fully automated implementation using Ansible. Steep learning curve - The learning curve of deploying and configuring all the components is high. Patching hell - Patching schedule became a nightmare because of the sheer number of components. Imagine having to raise change requests for patching all above components! Enterprise hell - Firewall configurations became big for enterprise on-premises customers, often required many hours of tracing which change requests were unsuccessfully executed. Multiple dashboards - Multiple dashboards for metrics, logs and service availability. Complex alerting configurations - Alert notification configurations were all over the place. Fine tuning alerts and updating them takes a lot of work.","title":"Problems"},{"location":"overview/motivation/#wish-list","text":"With the above problems in mind, we needed to become more efficient as a company deploying the tools we need to manage our customers. After promoting the above tools to our customers, we ate the humble pie, and went back to the drawing board with the aim of reducing the efforts needed to on-board new customers. On-premises / cloud deployment Single dashboard for metrics / logs / service health Simple alert rules configurations Capture all metrics at high resolution (with Cassandra there are well over 20,000 metrics!) Capture logs and internal events like authentication, DDL, DML etc Scheduled backup / restore feature Performs domain specific administrative tasks, including Cassandra repair Manages the following products; Apache Cassandra Apache Kafka DataStax Enterprise Confluent Enterprise Elasticsearch Apache Spark etc Simplified deployment model Single agent for collecting metrics, logs, event, configs The same agent performs execution of health checks, backup, restore No JMX to capture the metrics, and must be push from the JVM and not pull Single socket connection initiated by agent to management server requiring only simple firewall rules Bi-directional communication between agent and management server over the single socket Modern snappy GUI","title":"Wish List"},{"location":"server/api/overview/","text":"","title":"AxonOps Server API"}]}